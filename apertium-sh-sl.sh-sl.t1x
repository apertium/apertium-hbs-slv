<?xml version="1.0" encoding="utf-8"?>
<transfer default="chunk">

  <section-def-cats>
    <def-cat n="nom">
      <cat-item tags="n.*"/>
    </def-cat>
    <def-cat n="nom_gen">
      <cat-item tags="n.*.*.gen"/>
      <cat-item tags="n.*.*.gen.*"/>
    </def-cat>
    <def-cat n="nom_ins">
      <cat-item tags="n.*.*.ins"/>
      <cat-item tags="n.*.*.ins.*"/>
    </def-cat>
    <def-cat n="nom_loc">
      <cat-item tags="n.*.*.loc"/>
      <cat-item tags="n.*.*.loc.*"/>
    </def-cat>
    <def-cat n="nom_or_np">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="np">
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="np_nom">
      <cat-item tags="np.*.*.*.nom"/>
    </def-cat>
    <def-cat n="np_nom_non_cog_ant">
      <cat-item tags="np.top.*.*.nom"/>
      <cat-item tags="np.al.*.*.nom"/>
    </def-cat>
    <def-cat n="np_gen">
      <cat-item tags="np.*.*.*.gen"/>
    </def-cat>
    <def-cat n="np_ins">
      <cat-item tags="np.*.*.*.ins"/>
    </def-cat>
    <def-cat n="np_loc">
      <cat-item tags="np.*.*.*.loc"/>
    </def-cat>
    <def-cat n="vb_lp">
      <cat-item tags="vbser.lp.*"/>
      <cat-item tags="vblex.*.*.lp.*"/>
      <cat-item tags="vbhaver.*.*.lp.*"/>
      <cat-item tags="vbmod.lp.*"/>
    </def-cat>
    <def-cat n="vbser_lp">
      <cat-item tags="vbser.lp.*"/>
    </def-cat>
    <def-cat n="vbser_past">
      <cat-item tags="vbser.clt.pres.*"/>
      <cat-item tags="vbser.pres.*"/>
    </def-cat>
    <def-cat n="vbser_past_clt">
      <cat-item tags="vbser.clt.*"/>
    </def-cat>
    <def-cat n="vbser_past_emph">
      <cat-item tags="vbser.pres.*"/>
    </def-cat>
    <def-cat n="vbser_cond">
      <cat-item tags="vbser.clt.aor.*"/>
    </def-cat>
    <def-cat n="verb">
      <cat-item tags="vblex.*"/>
      <cat-item tags="vbser.*"/>
      <cat-item tags="vbmod.*"/>
      <cat-item tags="vbhaver.*"/>
    </def-cat>
    <def-cat n="vbmod">
      <cat-item tags="vbmod.*"/>
    </def-cat>
    <def-cat n="vblex">
      <cat-item tags="vblex.*"/>
    </def-cat>
    <def-cat n="vblex_ref">
      <cat-item tags="vblex.*.ref.*"/>
    </def-cat>
    <def-cat n="vbser">
      <cat-item tags="vbser.*"/>
    </def-cat>
    <def-cat n="vbpp">
      <cat-item tags="vblex.*.*.pp.*"/>
    </def-cat>
    <def-cat n="vbinf">
      <cat-item tags="vblex.*.*.inf"/>
      <cat-item tags="vblex.*.*.inf.*"/>
      <cat-item tags="vbmod.inf"/>
      <cat-item tags="vbmod.inf.*"/>
      <cat-item tags="vbhaver.*.*.inf"/>
      <cat-item tags="vbhaver.*.*.inf.*"/>
      <cat-item tags="vbser.inf"/>
      <cat-item tags="vbser.inf.*"/>
    </def-cat>
    <def-cat n="vbfutI">
      <cat-item lemma="htjeti" tags="vbmod.clt.futI.*"/>
    </def-cat>
    <def-cat n="vbhtjeti">
      <cat-item lemma="htjeti" tags="vbmod.pres.*"/>
      <cat-item lemma="htjeti" tags="vbmod.pii.*"/>
    </def-cat>
    <def-cat n="prns"><!--All pronouns-->
      <cat-item tags="prn"/>
      <cat-item tags="prn.*"/>
    </def-cat>
    <def-cat n="prn"><!--Not demonstrative, and not reflexive possesive se-->
      <cat-item tags="prn.pers.*"/>
      <cat-item tags="prn.pos.*"/>
      <cat-item tags="prn.ref.pos.*"/>
      <cat-item tags="prn.itg"/>
      <cat-item tags="prn.itg.*"/>
      <cat-item tags="prn.rel"/>
      <cat-item tags="prn.rel.*"/>
      <cat-item tags="prn.ind"/>
      <cat-item tags="prn.ind.*"/>
      <cat-item tags="prn.neg"/>
      <cat-item tags="prn.neg.*"/>
      <cat-item tags="prn.tot"/>
      <cat-item tags="prn.tot.*"/>
    </def-cat>
    <def-cat n="prn_rel">
      <cat-item tags="prn.rel.*"/>
    </def-cat>
    <def-cat n="prn_tot">
      <cat-item tags="prn.tot"/>
      <cat-item tags="prn.tot.*"/>
    </def-cat>
    <def-cat n="prn_dem">
      <cat-item tags="prn.dem.*"/>
    </def-cat>
    <def-cat n="prn_ref_pers">
      <cat-item tags="prn.ref.pers.*"/>
    </def-cat>
    <def-cat n="rel_prn">
      <cat-item tags="prn.rel.*"/>
    </def-cat>
    <def-cat n="num">
      <cat-item tags="num"/>
      <cat-item tags="num.*"/>
    </def-cat>
    <def-cat n="ord">
      <cat-item tags="num.ord.*"/>
    </def-cat>
    <def-cat n="adv">
      <cat-item tags="adv"/>
      <cat-item tags="adv.*"/>
    </def-cat>
    <def-cat n="adj_ADV">
      <cat-item tags="adj.pst.nt.sg.acc.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="adj_pst">
      <cat-item tags="adj.pst.*"/>
    </def-cat>
    <def-cat n="adj_pss_sfx">
      <cat-item lemma="pos" tags="adj.*"/>
    </def-cat>
    <def-cat n="adj_comp">
      <cat-item tags="adj.comp.*"/>
    </def-cat>
    <def-cat n="adj_sup">
      <cat-item tags="adj.sup.*"/>
    </def-cat>
    <def-cat n="adj_ssup">
      <cat-item tags="adj.ssup.*"/>
    </def-cat>
    <def-cat n="adj_gen">
      <cat-item tags="adj.*.*.*.gen.*"/>
    </def-cat>
    <def-cat n="adj_ins">
      <cat-item tags="adj.*.*.*.ins.*"/>
    </def-cat>
    <def-cat n="pr">
      <cat-item tags="pr"/>
      <cat-item tags="pr.*"/>
    </def-cat>
    <def-cat n="det">
      <cat-item tags="det"/>
      <cat-item tags="det.*"/>
    </def-cat>
    <def-cat n="exp">
      <cat-item tags="part.exp"/>
    </def-cat>
    <def-cat n="ne_part">
      <cat-item lemma ="ne" tags="part.neg"/>
    </def-cat>
    <def-cat n="li_part">
      <cat-item lemma ="li" tags="part.itg"/>
    </def-cat>
    <def-cat n="kako_adv">
      <cat-item lemma="kako" tags="adv"/>
      <cat-item lemma="kako" tags="cnjsub"/>
    </def-cat>
    <def-cat n="vblex_lp">
      <cat-item tags="vblex.*.*.lp.*"/>
      <cat-item tags="vbhaver.*.*.lp.*"/>
      <cat-item tags="vbmod.lp.*"/>
    </def-cat>
    <def-cat n="clitic">
      <cat-item lemma="clitic" tags="prn.*"/>
    </def-cat>
    <def-cat n="biti">
      <cat-item lemma="biti" tags="vbser.*"/>
	  <cat-item lemma="biti" tags="vblex.*"/>
	  <cat-item lemma="biti" tags="vbmod.*"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="np"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.al"/>
    </def-attr>

    <def-attr n="a_num">
      <attr-item tags="num"/>
      <attr-item tags="num.ord"/>
    </def-attr>

    <def-attr n="a_prp">
      <attr-item tags="pr"/>
    </def-attr>

    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.itg"/>
    </def-attr>

    <def-attr n="a_vrb">
      <attr-item tags="vblex"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbser.clt"/>
      <attr-item tags="vbmod"/>
    </def-attr>

    <def-attr n="a_adv">
      <attr-item tags="adv"/>
    </def-attr>

    <def-attr n="a_adv_form">
      <attr-item tags="sint"/>
      <attr-item tags="sint.comp"/>
      <attr-item tags="sint.sup"/>
      <attr-item tags="sint.ela"/>
    </def-attr>

    <def-attr n="a_deg">
      <attr-item tags="pst"/>
      <attr-item tags="comp"/>
      <attr-item tags="sup"/>
      <attr-item tags="ssup"/>
    </def-attr>

    <def-attr n="a_prn">
      <attr-item tags="prn"/>
      <attr-item tags="prn.neg"/>
      <attr-item tags="prn.pos"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.itg"/>
      <attr-item tags="prn.dem"/>
      <attr-item tags="prn.pers"/>
      <attr-item tags="prn.pers.clt"/>
      <attr-item tags="prn.tot"/>
      <attr-item tags="prn.ref.pers"/>
      <attr-item tags="prn.ref.pos"/>
      <attr-item tags="prn.rel"/>
    </def-attr>

    <def-attr n="trn">
      <attr-item tags="tv"/>
      <attr-item tags="iv"/>
      <attr-item tags="ref"/>
    </def-attr>


    <def-attr n="asp">
      <attr-item tags="perf"/>
      <attr-item tags="imperf"/>
    </def-attr>

    <def-attr n="tns">
      <attr-item tags="inf"/>
      <attr-item tags="pres"/>
      <attr-item tags="lp"/>
      <attr-item tags="lp.aor"/>
      <attr-item tags="lp.pii"/>
      <attr-item tags="opt"/>
      <attr-item tags="imp"/>
      <attr-item tags="aor"/>
      <attr-item tags="pii"/>
      <attr-item tags="pprs"/>
      <attr-item tags="clt.futI"/>
      <attr-item tags="futI"/>
      <attr-item tags="futII"/>
      <attr-item tags="fti"/>
      <attr-item tags="past"/>
    </def-attr>

    <def-attr n="gen">
      <attr-item tags="mi"/>
      <attr-item tags="ma"/>
      <attr-item tags="m"/>
      <attr-item tags="f"/>
      <attr-item tags="nt"/>
      <attr-item tags="mfn"/>
      <attr-item tags="mf"/>
    </def-attr>

    <def-attr n="prs">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>

    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
    </def-attr>

    <def-attr n="cas">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="gen"/>
      <attr-item tags="loc"/>
      <attr-item tags="ins"/>
      <attr-item tags="voc"/>
    </def-attr>

    <def-attr n="def">
      <attr-item tags="ind"/>
      <attr-item tags="def"/>
      <attr-item tags="dst"/>
      <attr-item tags="prx"/>
    </def-attr>

    <def-attr n="fnc">
      <attr-item tags="@N←"/>
      <attr-item tags="@N→"/>
      <attr-item tags="@A←"/>
      <attr-item tags="@Adv←"/>
    </def-attr>

  </section-def-attrs>

  <section-def-vars>
    <def-var n="numero" v="&lt;sg&gt;"/>
    <def-var n="genere" v="&lt;nt&gt;"/>
    <def-var n="persona" v="&lt;p3&gt;"/>
    <def-var n="conditional" v="False"/>
    <def-var n="caseFirstWord"/>
    <def-var n="EOS" v="true"/>
  </section-def-vars>

  <section-def-macros>
    <!--The macro maps tags from the sh tagset to their equivalent in sl-->
    <def-macro n="verb_adapter" npar="1">
      <let><clip pos="1" side="tl" part="whole"/>
      <concat>
		<clip pos="1" side="tl" part="lemh"/>
		<clip pos="1" side="tl" part="a_vrb"/>
		<clip pos="1" side="tl" part="asp"/>
		<clip pos="1" side="tl" part="trn"/>
		<clip pos="1" side="tl" part="tns"/>
		<clip pos="1" side="tl" part="prs"/>
		<clip pos="1" side="tl" part="nbr"/>
		<clip pos="1" side="tl" part="lemq"/>
      </concat>
      </let>
    </def-macro>

    <!--The macro maps tags from the sh tagset to their equivalent in sl-->
    <def-macro n="pr_adapter" npar="1">
      <let><clip pos="1" side="tl" part="whole"/>
      <concat>
	<clip pos="1" side="tl" part="lemh"/>
	<clip pos="1" side="tl" part="a_prp"/>
	<clip pos="1" side="tl" part="cas"/>
      </concat>
      </let>
    </def-macro>

	<def-macro n="firstWord" npar="1"><!--nova versió 8-febr-08  -->
		<choose>
			<when>
				<test>
					<equal> 
						<var n="EOS"/>
						<lit v="true"/>
					</equal> 
				</test>
				<let>
					<var n="caseFirstWord"/>
					<lit v="Aa"/>
				</let>
			</when>
			<otherwise> 
				<let>
					<var n="caseFirstWord"/>
					<lit v="aa"/>
				</let>
			</otherwise>
		</choose>
		<let>
			<var n="EOS"/>
			<lit v="false"/>
		</let>
	</def-macro>
	
    <def-macro n="InAnimate_adapter" npar="1"> <!-- TO DO: macro to change ma/mi to m -->
      <let><clip pos="1" side="tl" part="whole"/>
      <concat>
		<clip pos="1" side="tl" part="lemh"/>
      </concat>
      </let>
    </def-macro>

  </section-def-macros>

  <section-rules>
    <rule comment="vblex">
      <pattern>
		<pattern-item n="vblex"/>
      </pattern>
      <action>
		<call-macro n="firstWord"><with-param pos="1"/></call-macro>
		<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<out>
	  <chunk name="Verb" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="VBbsvsgdv"/></tag>
	      <tag><clip pos="1" side="tl" part="a_vrb"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="pr">
      <pattern>
	<pattern-item n="pr"/>
      </pattern>
      <action>
	<call-macro n="firstWord"><with-param pos="1"/></call-macro>
	<call-macro n="pr_adapter"><with-param pos="1"/></call-macro>
	<out>
	  <chunk name="Preposition" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="PR"/></tag>
	      <tag><clip pos="1" side="tl" part="a_prp"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <!--NOTE by krvoje: biti<vblex> == to beat, and biti<vbser> == to be are homographs, added a rule in disambiguation-->
    <rule comment="je bilo (vbser + vblex) = je bilo (vbser + vbser)">
      <pattern>
      	<pattern-item n="vbser_past"/>
		<pattern-item n="vblex"/>
      </pattern>
      <action>
	<call-macro n="firstWord"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<out>
	  <chunk name="Verb" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="VB"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_vrb"/>
		<clip pos="1" side="tl" part="trn"/>
	      <clip pos="1" side="tl" part="tns"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	    </lu>
	    <b/>	
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_vrb"/>
		  <clip pos="1" side="tl" part="trn"/>
	      <lit-tag v="past"/> <!-- Move to t2x? -->
	      <clip pos="2" side="tl" part="gen"/>
	      <clip pos="2" side="tl" part="nbr"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="Adj (adj.pst.nt.sg.acc) -> adv">
      <pattern>
      	<pattern-item n="adj_ADV"/>
      </pattern>
      <action>
		<call-macro n="firstWord"><with-param pos="1"/></call-macro>
		<choose>
		  <when>
		    <test>
		      <and>
			<equal>
			  <clip pos="1" side="sl" part="a_adj"/>
			  <lit-tag v="adj"/>
			</equal>
			<equal>
			  <clip pos="1" side="tl" part="a_adv"/>
			  <lit-tag v="adv"/>
			</equal>
		      </and>
		    </test>	
		    <out>
		      <chunk name="AdjToAdv" case="caseFirstWord">
			<tags>
			  <tag><lit-tag v="VB"/></tag>
			</tags>
			<lu>
			  <clip pos="1" side="tl" part="lemh"/>
			  <clip pos="1" side="tl" part="a_adv"/>
			</lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
		    <out>
		      <chunk name="Adj(adverb)" case="caseFirstWord">
			<tags>
			  <tag><lit-tag v="VB"/></tag>
			</tags>
			<lu>
			  <clip pos="1" side="tl" part="lemh"/>
			  <clip pos="1" side="tl" part="a_adj"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
			  <clip pos="1" side="tl" part="cas"/>
			  <clip pos="1" side="tl" part="def"/>
			</lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

	<rule comment="(se) ne biti(past) + verb - (part.neg + vbser.clt + verb) -> (se) biti.neg verb(past)">
      <pattern>
		<pattern-item n="ne_part"/>
		<pattern-item n="vbser_past"/>
		<pattern-item n="verb"/>
      </pattern>
      <action>
		<call-macro n="firstWord"><with-param pos="1"/></call-macro>
		<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
		<out>
		  <chunk name="Verb" case="caseFirstWord">
		    <tags>
		      <tag><lit-tag v="VB"/></tag>
		      <tag><clip pos="2" side="tl" part="a_vrb"/></tag>
		    </tags>
		    <lu>
		      <clip pos="2" side="tl" part="lemh"/>
			  <clip pos="2" side="tl" part="a_vrb"/>
			  <clip pos="2" side="tl" part="tns"/>
			  <lit-tag v="neg"/>
			  <clip pos="2" side="tl" part="prs"/>
			  <clip pos="2" side="tl" part="nbr"/>
		    </lu>
			<b/>
			<lu>
		      <clip pos="3" side="tl" part="lemh"/>
			  <clip pos="3" side="tl" part="a_vrb"/>
			  <clip pos="3" side="tl" part="asp"/>
			  <lit-tag v="tv.past"/>
			  <clip pos="3" side="tl" part="gen"/>
			  <clip pos="3" side="tl" part="nbr"/>
		    </lu>	
		  </chunk>
		</out>
    </action>
    </rule>

    <rule comment="adjective ma/mi -> adjective m">
      <pattern>
		<pattern-item n="adj"/>
      </pattern>
      <action>
		<call-macro n="firstWord"><with-param pos="1"/></call-macro>
		<choose>
		  <when>
		    <test>
		      <or>
				<equal>
				  <clip pos="1" side="sl" part="gen"/>
				  <lit-tag v="ma"/>
				</equal>
				<equal>
				  <clip pos="1" side="sl" part="gen"/>
				  <lit-tag v="mi"/>
				</equal>
		      </or>
		    </test>	
		    <out>
		      <chunk name="Adj" case="caseFirstWord">
				<tags>
				  <tag><lit-tag v="VB"/></tag>
				</tags>
				<lu>
				  <clip pos="1" side="tl" part="lemh"/>
				  <clip pos="1" side="tl" part="a_adj"/>
				  <lit-tag v="m"/>
				  <clip pos="1" side="tl" part="nbr"/>
				  <clip pos="1" side="tl" part="cas"/>
				  <clip pos="1" side="tl" part="def"/>
				</lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
		    <out>
		      <chunk name="Adj" case="caseFirstWord">
			<tags>
			  <tag><lit-tag v="VB"/></tag>
			</tags>
			<lu>
			  <clip pos="1" side="tl" part="lemh"/>
			  <clip pos="1" side="tl" part="a_adj"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
			  <clip pos="1" side="tl" part="cas"/>
			  <clip pos="1" side="tl" part="def"/>
			</lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

	<rule comment="mu je (clitic + biti) -> ima (imeti)">
      <pattern>
		<pattern-item n="clitic"/>
		<pattern-item n="biti"/>
      </pattern>
      <action>
		<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
		<out>
		  <chunk name="CliticBiti" case="caseFirstWord">
		    <tags>
		      <tag><lit-tag v="VB"/></tag>
		    </tags>
		    <lu>
		      <lit v="imeti"/>	
			  <lit-tag v="vblex.imperf.tv"/> <!-- fix in t2x? -->
			  <clip pos="2" side="tl" part="tns"/>
			  <clip pos="2" side="tl" part="prs"/>
			  <clip pos="2" side="tl" part="nbr"/>
		    </lu>	
		  </chunk>
		</out>
    </action>
    </rule>

	<rule comment="se igraju (clitic + verb.ref) -> se igrajo (se + verb)">
      <pattern>
		<pattern-item n="clitic"/>
		<pattern-item n="vblex_ref"/>
      </pattern>
      <action>
		<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
		<out>
		  <chunk name="ChunkName" case="caseFirstWord">
		    <tags>
		      <tag><lit-tag v="VB"/></tag>
		    </tags>
		    <lu>
			  <clip pos="1" side="tl" part="whole"/>
		    </lu>
			<b/>
			<lu>
			  <clip pos="2" side="tl" part="lemh"/> 
			  <clip pos="2" side="tl" part="a_vrb"/>
			  <clip pos="2" side="tl" part="asp"/>
			  <clip pos="2" side="tl" part="trn"/>
			  <clip pos="2" side="tl" part="tns"/>
			  <clip pos="2" side="tl" part="prs"/>
			  <clip pos="2" side="tl" part="nbr"/>
		    </lu>	
		  </chunk>
		</out>
    </action>
    </rule>



  </section-rules>
</transfer>
